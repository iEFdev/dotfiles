#
# ~/.bash.d/bash_macports
#
# Description: Separate file for MacPorts
#

# Macports
# --------------------
alias portout='echo -e "\v--->  Outdated:\n" && port echo outdated'
alias portsync='sudo port -v sync && portout'
alias portup='portsync'
#alias portup='sudo port -v selfupdate && portout'
alias portupgrade='sudo port upgrade'
alias portupall='sudo port upgrade outdated'
alias portclean='sudo port clean'

alias lsPorts='port echo installed'
alias lsLeaves='port echo leaves'
alias rmLeaves='sudo port uninstall leaves'
alias lsInactive='port echo inactive'
alias rmInactive='sudo port uninstall inactive'

alias lsDistBuild='ls -Ahl /opt/local/var/macports/{distfiles,build}'
alias rmDistBuild='sudo rm -rvf /opt/local/var/macports/{distfiles,build}/*'

alias setReq='sudo port setrequested'


# Bootstrap version: curl only (+ dependencies)
# ---------------------------------------------
alias boort='/opt/bootstrap/bin/port'

alias boortout='echo -e "\v--->  Outdated:\n" && boort echo outdated'
alias boortsync='sudo boort -v sync && boortout'
alias boortup='boortsync'
alias boortupgrade='sudo boort upgrade'
alias boortupall='sudo boort upgrade outdated'
alias boortclean='sudo boort clean'

alias lsBoorts='boort echo installed'
alias lsBLeaves='boort echo leaves'
alias rmBLeaves='sudo boort uninstall leaves'
alias lsBInactive='boort echo inactive'
alias rmBInactive='sudo boort uninstall inactive'

alias lsBoortBuild='ls -Ahl /opt/bootstrap/var/macports/{distfiles,build}'
alias rmBoortBuild='sudo rm -rvf /opt/bootstrap/var/macports/{distfiles,build}/*'

alias setBReq='sudo boort setrequested'


# Port loads
# --------------------
alias fail2ban.start='sudo port load fail2ban'
alias fail2ban.stop='sudo port unload fail2ban'

_mariadb='mariadb-10.2-server'
alias mysql.load="sudo port load ${_mariadb}"
alias mysql.unload="sudo port unload ${_mariadb}"
alias mysql.reload="sudo port reload ${_mariadb} && echo :: MariaDB Reloaded"

alias mysql.status='ps aux | grep mysql | grep -v grep'
alias mysql.history='open ~/.mysql_history'


# For MacPorts GitHub PR template
alias sysXcode="echo \"macOS $(sw_vers -productVersion) $(sw_vers -buildVersion)\"; echo \"Xcode $(xcodebuild -version | awk '{print $NF}' | tr '\n' ' ')\""


# Portfiles
# --------------------

alias pindex='(cd /opt/ports/ && sudo portindex)'

# mpchksum <portname>
function mpchksum()
{
    local _file="/opt/local/var/macports/distfiles/${1}/${2:-${1}}*";
    (cd $(dirname ${_file});
    echo "# $(basename ${_file})";
    for p in rmd160 sha256; do
        openssl dgst -r -${p} $(basename ${_file}) | awk -v p="${p}" '{print p "  " $1 " \\"}';
    done;
    stat -x ${_file} | grep 'Size' | awk '{print "size    " $2}';
    echo -e '---\n';)
}


# Go (port notes Lion)
# --------------------
# go has the following notes:
# go had to be specially patched and built to work on your platform.
#
# It likely won't work out of the box when building other projects,
# so make sure change your environment to use the following variables:
#
GO_EXTLINK_ENABLED="1"
#
# to always force go to use the external gcc or clang linker and
#
GO_LDFLAGS="\"-extldflags=-L/opt/local/lib -Wl,-headerpad_max_install_names -lMacportsLegacySupport\""
#
# to force-link any binary against the legacy support library.
#
# Use exactly the quoting provided here, even if it may look odd, or compilation will fail.
#
# Failure to do so will leave you unable to create binaries that use features not natively
# available on your system, either directly or through a go core dependency.


# Backup
# --------------------
# date -I == date +%F
function mpbak()
{
    _dest_folder="${1:-/path/to/default/folder}";
    (cd /opt;
    for b in ports local; do
       sudo rsync -avz -HAX ./${b}/ ${_dest_folder}/${b}_$(date -I).bak/
    done;)
}